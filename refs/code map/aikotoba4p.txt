
    song_.addCheckpoint(0, 0);
    song_.addCheckpoint(18, 48);
    song_.addCheckpoint(30, 78);
    song_.addCheckpoint(44, 112);
    song_.addCheckpoint(58, 140);
    song_.addCheckpoint(89, 212);
    song_.addCheckpoint(104, 248);
    song_.addCheckpoint(120, 280);
    song_.addCheckpoint(133, 308);
    song_.addCheckpoint(146, 344);
    song_.addCheckpoint(173, 412);



    // INTRO
    for (int ii = 0; ii < 32; ii++) {
        auto i = static_cast<float>(ii);

        float skip = std::floor(i / 4.f);
        
        mechanicList_.emplace_back(new Spread(16 + i + 0.5f, 150, 1, 4,
            Target(TARGET_POS,
                { 500.f + 350.f * std::cos(2.f * (i + skip) * PI / 8.f - PI / 4.f),
                 500.f + 350.f * std::sin(2.f * (i + skip) * PI / 8.f - PI / 4.f) })));
    }
    mechanicList_.emplace_back(new Tether(47,
        Target(TARGET_POS, {500, 500}),
        Target(TARGET_ENTITY, TARGET_PLAYERS, 0),
        150, 32, true, true));
    mechanicList_.emplace_back(new Tether(47,
        Target(TARGET_POS, { 500, 500 }),
        Target(TARGET_ENTITY, TARGET_PLAYERS, 1),
        150, 32, true, true));
    mechanicList_.emplace_back(new Tether(47,
        Target(TARGET_POS, { 500, 500 }),
        Target(TARGET_ENTITY, TARGET_PLAYERS, 2),
        150, 32, true, true));
    mechanicList_.emplace_back(new Tether(47,
        Target(TARGET_POS, { 500, 500 }),
        Target(TARGET_ENTITY, TARGET_PLAYERS, 3),
        150, 32, true, true));



    // COUPLET 1

    /*mechanicList_.emplace_back(new Spread(48, 200, 4, 4,
        Target(TARGET_POS, { 500.f,500.f })));*/

    mechanicList_.emplace_back(new Tether(49.5,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 0),
        Target(TARGET_ENTITY, TARGET_PLAYERS, 1),
        300, 4, false, false));

    mechanicList_.emplace_back(new Tether(49.5,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 2),
        Target(TARGET_ENTITY, TARGET_PLAYERS, 3),
        300, 4, false, false));


    for (int i = 0; i < 4; i++) {
        mechanicList_.emplace_back(new Spread(51, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(51.5, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(52, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(52.5, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(53, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(53.5, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(54, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(55, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
    }

    mechanicList_.emplace_back(new Spread(56, 200, 4, 8,
        Target(TARGET_POS, { 500.f,500.f })));

    mechanicList_.emplace_back(new Tether(57.5,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 0),
        Target(TARGET_ENTITY, TARGET_PLAYERS, 1),
        300, 4, false, false));

    mechanicList_.emplace_back(new Tether(57.5,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 2),
        Target(TARGET_ENTITY, TARGET_PLAYERS, 3),
        300, 4, false, false));

    for (int i = 0; i < 4; i++) {
        mechanicList_.emplace_back(new Spread(59, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(59.5, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(60, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(60.5, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(61.5, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(62, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(63, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
    }

    mechanicList_.emplace_back(new Spread(64, 200, 4, 8,
        Target(TARGET_POS, { 500.f,500.f })));

    mechanicList_.emplace_back(new Tether(65.5,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 0),
        Target(TARGET_ENTITY, TARGET_PLAYERS, 1),
        300, 4, false, false));

    mechanicList_.emplace_back(new Tether(65.5,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 2),
        Target(TARGET_ENTITY, TARGET_PLAYERS, 3),
        300, 4, false, false));


    for (int i = 0; i < 4; i++) {
        mechanicList_.emplace_back(new Spread(67, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(67.5, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(68, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(68.5, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(69, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(69.5, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(70, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(71, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
    }



    mechanicList_.emplace_back(new Spread(72, 200, 4, 8,
        Target(TARGET_POS, { 500.f,500.f })));

    mechanicList_.emplace_back(new Tether(73.5,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 0),
        Target(TARGET_ENTITY, TARGET_PLAYERS, 1),
        300, 4, false, false));

    mechanicList_.emplace_back(new Tether(73.5,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 2),
        Target(TARGET_ENTITY, TARGET_PLAYERS, 3),
        300, 4, false, false));

    for (int i = 0; i < 4; i++) {
        mechanicList_.emplace_back(new Spread(75, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(75.5, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
    }


    // COUPLET 2

    mechanicList_.emplace_back(new Tether(88,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 0),
        Target(TARGET_ENTITY, TARGET_PLAYERS, 1),
        500, 12, true, true));

    mechanicList_.emplace_back(new Tether(88,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 2),
        Target(TARGET_ENTITY, TARGET_PLAYERS, 3),
        500, 12, true, true));

    for (int i = 0; i < 4; i++) {
        mechanicList_.emplace_back(new Spread(80 + 2 * i, 150, 2, 4,
            Target(TARGET_POS, { 150.f + 87.5f * 2 * i, 250 })));
        mechanicList_.emplace_back(new Spread(80 + 2 * i, 150, 2, 4,
            Target(TARGET_POS, { 150.f + 87.5f * 2 * i, 750 })));
    }


    mechanicList_.emplace_back(new Tether(96,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 0),
        Target(TARGET_ENTITY, TARGET_PLAYERS, 1),
        500, 8, false, true));

    mechanicList_.emplace_back(new Tether(96,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 2),
        Target(TARGET_ENTITY, TARGET_PLAYERS, 3),
        500, 8, false, true));

    for (int i = 0; i < 4; i++) {
        mechanicList_.emplace_back(new Spread(88 + 2 * i, 150, 2, 4,
            Target(TARGET_POS, { 850.f - 87.5f * 2 * i, 250 })));
        mechanicList_.emplace_back(new Spread(88 + 2 * i, 150, 2, 4,
            Target(TARGET_POS, { 850.f - 87.5f * 2 * i, 750 })));
    }


    mechanicList_.emplace_back(new Tether(104,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 0),
        Target(TARGET_ENTITY, TARGET_PLAYERS, 1),
        500, 8, true, true));

    mechanicList_.emplace_back(new Tether(104,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 2),
        Target(TARGET_ENTITY, TARGET_PLAYERS, 3),
        500, 8, true, true));

    for (int i = 0; i < 4; i++) {
        mechanicList_.emplace_back(new Spread(96 + 2 * i, 150, 2, 4,
            Target(TARGET_POS, { 150.f + 87.5f * 2 * i, 250 })));
        mechanicList_.emplace_back(new Spread(96 + 2 * i, 150, 2, 4,
            Target(TARGET_POS, { 150.f + 87.5f * 2 * i, 750 })));
    }


    mechanicList_.emplace_back(new Tether(112,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 0),
        Target(TARGET_ENTITY, TARGET_PLAYERS, 1),
        500, 8, false, true));

    mechanicList_.emplace_back(new Tether(112,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 2),
        Target(TARGET_ENTITY, TARGET_PLAYERS, 3),
        500, 8, false, true));

    for (int i = 0; i < 4; i++) {
        mechanicList_.emplace_back(new Spread(104 + 2 * i, 150, 2, 4,
            Target(TARGET_POS, { 850.f - 87.5f * 2 * i, 250 })));
        mechanicList_.emplace_back(new Spread(104 + 2 * i, 150, 2, 4,
            Target(TARGET_POS, { 850.f - 87.5f * 2 * i, 750 })));
    }


    // COUPLET 3

    for (int ii = 0; ii < 4; ii++) {
        auto i = static_cast<float>(ii);
        mechanicList_.emplace_back(new Spread(112 + 4 * i, 300, 2, 4,
            Target(TARGET_ENTITY, TARGET_PLAYERS, 0, TARGET_FOLLOW)));
        mechanicList_.emplace_back(new Spread(114 + 4 * i, 300, 0, 2,
            Target(TARGET_ENTITY, TARGET_PLAYERS, 0, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(112 + 4 * i, 300, 2, 4,
            Target(TARGET_ENTITY, TARGET_PLAYERS, 1, TARGET_FOLLOW)));
        mechanicList_.emplace_back(new Spread(114 + 4 * i, 300, 0, 2,
            Target(TARGET_ENTITY, TARGET_PLAYERS, 1, TARGET_ONINIT)));

    }

    for (int ii = 0; ii < 6; ii++) {
        auto i = static_cast<float>(ii);
        mechanicList_.emplace_back(new Spread(128 + 2 * i, 100, 1, 2,
            Target(TARGET_ENTITY, TARGET_PLAYERS, 0, TARGET_FOLLOW)));
        mechanicList_.emplace_back(new Spread(129 + 2 * i, 100, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, 0, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(128 + 2 * i, 100, 1, 2,
            Target(TARGET_ENTITY, TARGET_PLAYERS, 1, TARGET_FOLLOW)));
        mechanicList_.emplace_back(new Spread(129 + 2 * i, 100, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, 1, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(128 + 2 * i, 100, 1, 2,
            Target(TARGET_ENTITY, TARGET_PLAYERS, 2, TARGET_FOLLOW)));
        mechanicList_.emplace_back(new Spread(129 + 2 * i, 100, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, 2, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(128 + 2 * i, 100, 1, 2,
            Target(TARGET_ENTITY, TARGET_PLAYERS, 3, TARGET_FOLLOW)));
        mechanicList_.emplace_back(new Spread(129 + 2 * i, 100, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, 3, TARGET_ONINIT)));
    }


    // REFRAIN 1

    mechanicList_.emplace_back(new MoveEntity(140, Target(TARGET_ENTITY, TARGET_TOTEMS, 0),
        Target(TARGET_POS, { 500, 50 }), -1, true));
    mechanicList_.emplace_back(new ActivateTotem(140, Target(TARGET_ENTITY, TARGET_TOTEMS, 0), true));

    mechanicList_.emplace_back(new MoveEntity(140, Target(TARGET_ENTITY, TARGET_TOTEMS, 1),
        Target(TARGET_POS, { 500, 950 }), -1, true));
    mechanicList_.emplace_back(new ActivateTotem(140, Target(TARGET_ENTITY, TARGET_TOTEMS, 1), true));


    for (int i = 0; i < 4; i++) {
        mechanicList_.emplace_back(new Tether(144,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i),
            Target(TARGET_ENTITY, TARGET_TOTEMS, i % 2),
            300, 4, true, false));

        mechanicList_.emplace_back(new Tether(148,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i),
            Target(TARGET_ENTITY, TARGET_TOTEMS, i % 2),
            800, 4, false, false));

        mechanicList_.emplace_back(new Tether(152,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i),
            Target(TARGET_ENTITY, TARGET_TOTEMS, i % 2),
            300, 4, true, false));

        mechanicList_.emplace_back(new Tether(156,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i),
            Target(TARGET_ENTITY, TARGET_TOTEMS, i % 2),
            800, 4, false, false));
    }


    for (int ii = 0; ii < 13; ii++) {
        auto i = static_cast<float>(ii);
        float ac = ii == 0 ? 4 : 1;
        mechanicList_.emplace_back(new MoveEntity(160 + i, Target(TARGET_ENTITY, TARGET_TOTEMS, 0),
            Target(TARGET_POS, { 500.f + 450.f * std::cos(2.f * i * PI / 16.f - PI / 2),
                                      500.f + 450.f * std::sin(2.f * i * PI / 16.f - PI / 2) }), 500, false));

        mechanicList_.emplace_back(new Spread(160 + i, 200, 2, ac,
            Target(TARGET_ENTITY, TARGET_TOTEMS, 0, TARGET_FOLLOW)));



        mechanicList_.emplace_back(new MoveEntity(160 + i, Target(TARGET_ENTITY, TARGET_TOTEMS, 1),
            Target(TARGET_POS, { 500.f + 450.f * std::cos(2.f * i * PI / 16.f + PI / 2),
                                      500.f + 450.f * std::sin(2.f * i * PI / 16.f + PI / 2) }), 500, false));

        mechanicList_.emplace_back(new Spread(160 + i, 200, 2, ac,
            Target(TARGET_ENTITY, TARGET_TOTEMS, 1, TARGET_FOLLOW)));
    }

    for (int i = 0; i < 4; i++) {
        mechanicList_.emplace_back(new Tether(176,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i),
            Target(TARGET_ENTITY, TARGET_TOTEMS, i % 2),
            300, 4, true, false));

        mechanicList_.emplace_back(new Tether(180,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i),
            Target(TARGET_ENTITY, TARGET_TOTEMS, i % 2),
            800, 4, false, false));

        mechanicList_.emplace_back(new Tether(184,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i),
            Target(TARGET_ENTITY, TARGET_TOTEMS, i % 2),
            300, 4, true, false));

        mechanicList_.emplace_back(new Tether(188,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i),
            Target(TARGET_ENTITY, TARGET_TOTEMS, i % 2),
            800, 4, false, false));

    }

    for (int ii = 0; ii < 13; ii++) {
        auto i = static_cast<float>(ii);
        float ac = ii == 0 ? 4 : 1;
        mechanicList_.emplace_back(new MoveEntity(192 + i, Target(TARGET_ENTITY, TARGET_TOTEMS, 0),
            Target(TARGET_POS, { 500.f + 450.f * std::cos(2.f * i * PI / 16.f + PI),
                                      500.f + 450.f * std::sin(2.f * i * PI / 16.f + PI) }), 500, false));

        mechanicList_.emplace_back(new Spread(192 + i, 200, 2, ac,
            Target(TARGET_ENTITY, TARGET_TOTEMS, 0, TARGET_FOLLOW)));



        mechanicList_.emplace_back(new MoveEntity(192 + i, Target(TARGET_ENTITY, TARGET_TOTEMS, 1),
            Target(TARGET_POS, { 500.f + 450.f * std::cos(2.f * i * PI / 16.f),
                                      500.f + 450.f * std::sin(2.f * i * PI / 16.f) }), 500, false));

        mechanicList_.emplace_back(new Spread(192 + i, 200, 2, ac,
            Target(TARGET_ENTITY, TARGET_TOTEMS, 1, TARGET_FOLLOW)));
    }



    mechanicList_.emplace_back(new Spread(208, 300, 2, 4,
        Target(TARGET_POS, { 500,500 })));


    mechanicList_.emplace_back(new ActivateTotem(212, Target(TARGET_ENTITY, TARGET_TOTEMS, 0), false));
    mechanicList_.emplace_back(new ActivateTotem(212, Target(TARGET_ENTITY, TARGET_TOTEMS, 1), false));


    // COUPLET 1

    mechanicList_.emplace_back(new Spread(216, 200, 4, 8,
        Target(TARGET_POS, { 500.f,500.f })));

    mechanicList_.emplace_back(new Tether(217.5,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 0),
        Target(TARGET_ENTITY, TARGET_PLAYERS, 1),
        300, 4, false, false));

    mechanicList_.emplace_back(new Tether(217.5,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 2),
        Target(TARGET_ENTITY, TARGET_PLAYERS, 3),
        300, 4, false, false));

    for (int ii = 0; ii < 4; ii++) {
        mechanicList_.emplace_back(new Spread(219, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, ii, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(219.5, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, ii, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(220, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, ii, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(220.5, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, ii, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(221, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, ii, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(221.5, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, ii, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(222, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, ii, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(223, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, ii, TARGET_ONINIT)));
    }



    mechanicList_.emplace_back(new Spread(224, 200, 4, 8,
        Target(TARGET_POS, { 500.f,500.f })));

    mechanicList_.emplace_back(new Tether(225.5,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 0),
        Target(TARGET_ENTITY, TARGET_PLAYERS, 1),
        300, 4, false, false));

    mechanicList_.emplace_back(new Tether(225.5,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 2),
        Target(TARGET_ENTITY, TARGET_PLAYERS, 3),
        300, 4, false, false));

    for (int i = 0; i < 4; i++) {
        mechanicList_.emplace_back(new Spread(227, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(227.5, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(228, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(228.5, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(229.5, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(230, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(231, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
    }

    mechanicList_.emplace_back(new Spread(232, 200, 4, 8,
        Target(TARGET_POS, { 500.f,500.f })));

    mechanicList_.emplace_back(new Tether(233.5,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 0),
        Target(TARGET_ENTITY, TARGET_PLAYERS, 1),
        300, 4, false, false));

    mechanicList_.emplace_back(new Tether(233.5,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 2),
        Target(TARGET_ENTITY, TARGET_PLAYERS, 3),
        300, 4, false, false));

    for (int i = 0; i < 4; i++) {
        mechanicList_.emplace_back(new Spread(235, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(235.5, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(236, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(236.5, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(237, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(237.5, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(238, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(239, 70, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i, TARGET_ONINIT)));
    }



    mechanicList_.emplace_back(new Spread(240, 200, 4, 8,
        Target(TARGET_POS, { 500.f,500.f })));

    mechanicList_.emplace_back(new Spread(244, 300, 2, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 0, TARGET_FOLLOW)));
    mechanicList_.emplace_back(new Spread(244, 300, 2, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 1, TARGET_FOLLOW)));

    mechanicList_.emplace_back(new Spread(247.5, 300, 4, 3.5,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 0, TARGET_ONINIT)));
    mechanicList_.emplace_back(new Spread(247.5, 300, 4, 3.5,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 1, TARGET_ONINIT)));



    // COUPLET 3

    for (int ii = 0; ii < 3; ii++) {
        auto i = static_cast<float>(ii);
        mechanicList_.emplace_back(new Spread(252 + 4 * i, 300, 2, 4,
            Target(TARGET_ENTITY, TARGET_PLAYERS, 0, TARGET_FOLLOW)));
        mechanicList_.emplace_back(new Spread(254 + 4 * i, 300, 0, 2,
            Target(TARGET_ENTITY, TARGET_PLAYERS, 0, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(252 + 4 * i, 300, 2, 4,
            Target(TARGET_ENTITY, TARGET_PLAYERS, 1, TARGET_FOLLOW)));
        mechanicList_.emplace_back(new Spread(254 + 4 * i, 300, 0, 2,
            Target(TARGET_ENTITY, TARGET_PLAYERS, 1, TARGET_ONINIT)));

    }

    for (int ii = 0; ii < 6; ii++) {
        auto i = static_cast<float>(ii);
        mechanicList_.emplace_back(new Spread(264 + 2 * i, 100, 1, 2,
            Target(TARGET_ENTITY, TARGET_PLAYERS, 0, TARGET_FOLLOW)));
        mechanicList_.emplace_back(new Spread(265 + 2 * i, 100, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, 0, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(264 + 2 * i, 100, 1, 2,
            Target(TARGET_ENTITY, TARGET_PLAYERS, 1, TARGET_FOLLOW)));
        mechanicList_.emplace_back(new Spread(265 + 2 * i, 100, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, 1, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(264 + 2 * i, 100, 1, 2,
            Target(TARGET_ENTITY, TARGET_PLAYERS, 2, TARGET_FOLLOW)));
        mechanicList_.emplace_back(new Spread(265 + 2 * i, 100, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, 2, TARGET_ONINIT)));
        mechanicList_.emplace_back(new Spread(264 + 2 * i, 100, 1, 2,
            Target(TARGET_ENTITY, TARGET_PLAYERS, 3, TARGET_FOLLOW)));
        mechanicList_.emplace_back(new Spread(265 + 2 * i, 100, 0, 1,
            Target(TARGET_ENTITY, TARGET_PLAYERS, 3, TARGET_ONINIT)));

    }


    mechanicList_.emplace_back(new Spread(278, 300, 4, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 0, TARGET_FOLLOW)));




    // INTRO

    for (int ii = 0; ii < 24; ii++) {
        auto i = static_cast<float>(ii);
        float skip = std::floor(i / 4.f);

        mechanicList_.emplace_back(new Spread(282 + i + 0.5f, 150, 1, 4,
            Target(TARGET_POS,
                { 500.f + 350.f * std::cos(PI + 2.f * (i + skip) * PI / 8.f - PI / 4),
                 500.f + 350.f * std::sin(PI + 2.f * (i + skip) * PI / 8.f - PI / 4) })));

    }

    mechanicList_.emplace_back(new Tether(307,
        Target(TARGET_POS, { 500, 500 }),
        Target(TARGET_ENTITY, TARGET_PLAYERS, 0),
        150, 32, true, true));

    // RAMPUP

    mechanicList_.emplace_back(new MoveEntity(308, Target(TARGET_ENTITY, TARGET_TOTEMS, 2),
        Target(TARGET_POS, { 300, 50 }), -1, true));
    mechanicList_.emplace_back(new ActivateTotem(308, Target(TARGET_ENTITY, TARGET_TOTEMS, 2), true));

    mechanicList_.emplace_back(new MoveEntity(308, Target(TARGET_ENTITY, TARGET_TOTEMS, 3),
        Target(TARGET_POS, { 700, 50 }), -1, true));
    mechanicList_.emplace_back(new ActivateTotem(308, Target(TARGET_ENTITY, TARGET_TOTEMS, 3), true));


    mechanicList_.emplace_back(new Tether(342,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 0),
        Target(TARGET_ENTITY, TARGET_TOTEMS, 2),
        300, 34, true, true));
    mechanicList_.emplace_back(new Tether(342,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 2),
        Target(TARGET_ENTITY, TARGET_TOTEMS, 2),
        300, 34, true, true));

    mechanicList_.emplace_back(new Tether(342,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 1),
        Target(TARGET_ENTITY, TARGET_TOTEMS, 3),
        300, 34, true, true));
    mechanicList_.emplace_back(new Tether(342,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 3),
        Target(TARGET_ENTITY, TARGET_TOTEMS, 3),
        300, 34, true, true));

    mechanicList_.emplace_back(new Spread(312, 150, 4, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 0, TARGET_FOLLOW)));

    mechanicList_.emplace_back(new MoveEntity(312, Target(TARGET_ENTITY, TARGET_TOTEMS, 2),
        Target(TARGET_POS, { 300, 500 }), 200, false));

    mechanicList_.emplace_back(new MoveEntity(312, Target(TARGET_ENTITY, TARGET_TOTEMS, 3),
        Target(TARGET_POS, { 700, 500 }), 200, false));

    mechanicList_.emplace_back(new Spread(316, 150, 4, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 1, TARGET_FOLLOW)));

    mechanicList_.emplace_back(new Spread(318, 150, 1, 2,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 0, TARGET_FOLLOW)));

    mechanicList_.emplace_back(new Spread(318.5, 150, 1, 2.5,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 1, TARGET_FOLLOW)));

    mechanicList_.emplace_back(new Spread(318, 150, 1, 2,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 2, TARGET_FOLLOW)));

    mechanicList_.emplace_back(new Spread(318.5, 150, 1, 2.5,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 3, TARGET_FOLLOW)));



    mechanicList_.emplace_back(new Spread(320, 150, 4, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 0, TARGET_FOLLOW)));

    mechanicList_.emplace_back(new MoveEntity(320, Target(TARGET_ENTITY, TARGET_TOTEMS, 2),
        Target(TARGET_POS, { 300, 950 }), 200, false));

    mechanicList_.emplace_back(new MoveEntity(320, Target(TARGET_ENTITY, TARGET_TOTEMS, 3),
        Target(TARGET_POS, { 700, 950 }), 200, false));

    mechanicList_.emplace_back(new Spread(324, 150, 4, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 1, TARGET_FOLLOW)));

    mechanicList_.emplace_back(new Spread(326, 150, 1, 2,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 0, TARGET_FOLLOW)));
    mechanicList_.emplace_back(new Spread(326.5, 150, 1, 2,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 1, TARGET_FOLLOW)));
    mechanicList_.emplace_back(new Spread(326, 150, 1, 2,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 2, TARGET_FOLLOW)));
    mechanicList_.emplace_back(new Spread(326.5, 150, 1, 2,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 3, TARGET_FOLLOW)));




    mechanicList_.emplace_back(new Spread(328, 150, 4, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 0, TARGET_FOLLOW)));

    mechanicList_.emplace_back(new MoveEntity(328, Target(TARGET_ENTITY, TARGET_TOTEMS, 2),
        Target(TARGET_POS, { 50, 500 }), 300, false));

    mechanicList_.emplace_back(new MoveEntity(328, Target(TARGET_ENTITY, TARGET_TOTEMS, 3),
        Target(TARGET_POS, { 450, 500 }), 300, false));

    mechanicList_.emplace_back(new Spread(332, 150, 4, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 0, TARGET_FOLLOW)));

    mechanicList_.emplace_back(new MoveEntity(332, Target(TARGET_ENTITY, TARGET_TOTEMS, 2),
        Target(TARGET_POS, { 300, 50 }), 300, false));

    mechanicList_.emplace_back(new MoveEntity(332, Target(TARGET_ENTITY, TARGET_TOTEMS, 3),
        Target(TARGET_POS, { 700, 50 }), 300, false));

    mechanicList_.emplace_back(new Spread(336, 150, 4, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 0, TARGET_FOLLOW)));

    mechanicList_.emplace_back(new MoveEntity(336, Target(TARGET_ENTITY, TARGET_TOTEMS, 2),
        Target(TARGET_POS, { 550, 500 }), 300, false));

    mechanicList_.emplace_back(new MoveEntity(336, Target(TARGET_ENTITY, TARGET_TOTEMS, 3),
        Target(TARGET_POS, { 950, 500 }), 300, false));


    mechanicList_.emplace_back(new Spread(340, 150, 4, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 1, TARGET_FOLLOW)));

    mechanicList_.emplace_back(new Spread(342, 150, 1, 2,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 0, TARGET_FOLLOW)));
    mechanicList_.emplace_back(new Spread(342.5, 150, 1, 2,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 1, TARGET_FOLLOW)));
    mechanicList_.emplace_back(new Spread(342, 150, 1, 2,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 2, TARGET_FOLLOW)));
    mechanicList_.emplace_back(new Spread(342.5, 150, 1, 2,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 3, TARGET_FOLLOW)));


    mechanicList_.emplace_back(new ActivateTotem(344, Target(TARGET_ENTITY, TARGET_TOTEMS, 2), false));
    mechanicList_.emplace_back(new ActivateTotem(344, Target(TARGET_ENTITY, TARGET_TOTEMS, 3), false));


    // REFRAIN 1

    mechanicList_.emplace_back(new MoveEntity(344, Target(TARGET_ENTITY, TARGET_TOTEMS, 0),
        Target(TARGET_POS, { 500, 50 }), -1, true));
    mechanicList_.emplace_back(new ActivateTotem(344, Target(TARGET_ENTITY, TARGET_TOTEMS, 0), true));

    mechanicList_.emplace_back(new MoveEntity(344, Target(TARGET_ENTITY, TARGET_TOTEMS, 1),
        Target(TARGET_POS, { 500, 950 }), -1, true));
    mechanicList_.emplace_back(new ActivateTotem(344, Target(TARGET_ENTITY, TARGET_TOTEMS, 1), true));


    for (int i = 0; i < 4; i++) {
        mechanicList_.emplace_back(new Tether(348,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i),
            Target(TARGET_ENTITY, TARGET_TOTEMS, i % 2),
            300, 4, true, false));

        mechanicList_.emplace_back(new Tether(352,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i),
            Target(TARGET_ENTITY, TARGET_TOTEMS, i % 2),
            800, 4, false, false));

        mechanicList_.emplace_back(new Tether(356,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i),
            Target(TARGET_ENTITY, TARGET_TOTEMS, i % 2),
            300, 4, true, false));

        mechanicList_.emplace_back(new Tether(360,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i),
            Target(TARGET_ENTITY, TARGET_TOTEMS, i % 2),
            800, 4, false, false));
    }



    for (int ii = 0; ii < 6; ii++) {
        auto i = static_cast<float>(ii);
        mechanicList_.emplace_back(new Spread(348, 250, 0, 4,
            Target(TARGET_POS, { 750,i * 250 })));
    }

    for (int ii = 0; ii < 6; ii++) {
        auto i = static_cast<float>(ii);
        mechanicList_.emplace_back(new Spread(352, 250, 0, 4,
            Target(TARGET_POS, { 250,i * 250 })));
    }

    for (int ii = 0; ii < 6; ii++) {
        auto i = static_cast<float>(ii);
        mechanicList_.emplace_back(new Spread(356, 250, 0, 4,
            Target(TARGET_POS, { 750,i * 250 })));
    }

    for (int ii = 0; ii < 6; ii++) {
        auto i = static_cast<float>(ii);
        mechanicList_.emplace_back(new Spread(360, 250, 0, 4,
            Target(TARGET_POS, { 250,i * 250 })));
    }





    for (int ii = 0; ii < 13; ii++) {
        auto i = static_cast<float>(ii);
        float ac = ii == 0 ? 4 : 1;
        mechanicList_.emplace_back(new MoveEntity(364 + i, Target(TARGET_ENTITY, TARGET_TOTEMS, 0),
            Target(TARGET_POS, { 500.f + 450.f * std::cos(2.f * i * PI / 16.f - PI / 2),
                                500.f + 450.f * std::sin(2.f * i * PI / 16.f - PI / 2) }), 500, false));

        mechanicList_.emplace_back(new Spread(364 + i, 200, 2, ac,
            Target(TARGET_ENTITY, TARGET_TOTEMS, 0, TARGET_FOLLOW)));



        mechanicList_.emplace_back(new MoveEntity(364 + i, Target(TARGET_ENTITY, TARGET_TOTEMS, 1),
            Target(TARGET_POS, { 500.f + 450.f * std::cos(2.f * i * PI / 16.f + PI / 2),
                                500.f + 450.f * std::sin(2.f * i * PI / 16.f + PI / 2) }), 500, false));

        mechanicList_.emplace_back(new Spread(364 + i, 200, 2, ac,
            Target(TARGET_ENTITY, TARGET_TOTEMS, 1, TARGET_FOLLOW)));
    }



    for (int i = 0; i < 4; i++) {
        mechanicList_.emplace_back(new Tether(384,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i),
            Target(TARGET_ENTITY, TARGET_TOTEMS, i % 2),
            800, 4, false, false));

        mechanicList_.emplace_back(new Tether(388,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i),
            Target(TARGET_ENTITY, TARGET_TOTEMS, i % 2),
            300, 4, true, false));

        mechanicList_.emplace_back(new Tether(392,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i),
            Target(TARGET_ENTITY, TARGET_TOTEMS, i % 2),
            800, 4, false, false));

        mechanicList_.emplace_back(new Tether(380,
            Target(TARGET_ENTITY, TARGET_PLAYERS, i),
            Target(TARGET_ENTITY, TARGET_TOTEMS, i % 2),
            300, 4, true, false));
    }



    for (int ii = 0; ii < 6; ii++) {
        auto i = static_cast<float>(ii);
        mechanicList_.emplace_back(new Spread(380, 250, 0, 4,
            Target(TARGET_POS, { i * 250, 250 + 500.f * (ii < 3) })));
    }

    for (int ii = 0; ii < 6; ii++) {
        auto i = static_cast<float>(ii);
        mechanicList_.emplace_back(new Spread(384, 250, 0, 4,
            Target(TARGET_POS, { i * 250, 250 + 500.f * (ii >= 3) })));
    }


    for (int ii = 0; ii < 6; ii++) {
        auto i = static_cast<float>(ii);
        mechanicList_.emplace_back(new Spread(388, 250, 0, 4,
            Target(TARGET_POS, { i * 250, 250 })));
    }

    for (int ii = 0; ii < 6; ii++) {
        auto i = static_cast<float>(ii);
        mechanicList_.emplace_back(new Spread(392, 250, 0, 4,
            Target(TARGET_POS, { i * 250, 750 })));
    }



    for (int ii = 0; ii < 13; ii++) {
        auto i = static_cast<float>(ii);
        float ac = ii == 0 ? 4 : 1;
        mechanicList_.emplace_back(new MoveEntity(396 + i, Target(TARGET_ENTITY, TARGET_TOTEMS, 0),
            Target(TARGET_POS, { 500.f + 450.f * std::cos(2.f * i * PI / 16.f + PI),
                                500.f + 450.f * std::sin(2.f * i * PI / 16.f + PI) }), 500, false));

        mechanicList_.emplace_back(new Spread(396 + i, 200, 2, ac,
            Target(TARGET_ENTITY, TARGET_TOTEMS, 0, TARGET_FOLLOW)));



        mechanicList_.emplace_back(new MoveEntity(396 + i, Target(TARGET_ENTITY, TARGET_TOTEMS, 1),
            Target(TARGET_POS, { 500.f + 450.f * std::cos(2.f * i * PI / 16.f),
                                500.f + 450.f * std::sin(2.f * i * PI / 16.f) }), 500, false));

        mechanicList_.emplace_back(new Spread(396 + i, 200, 2, ac,
            Target(TARGET_ENTITY, TARGET_TOTEMS, 1, TARGET_FOLLOW)));
    }

    mechanicList_.emplace_back(new ActivateTotem(408, Target(TARGET_ENTITY, TARGET_TOTEMS, 0), false));
    mechanicList_.emplace_back(new ActivateTotem(408, Target(TARGET_ENTITY, TARGET_TOTEMS, 1), false));



    // OUTRO

    for (int i = 0; i < 6; i++) {
        mechanicList_.emplace_back(new Spread(412, 200, 0, 4,
            Target(TARGET_POS, { i * 200.f, 400.f })));

        mechanicList_.emplace_back(new Spread(412, 200, 0, 4,
            Target(TARGET_POS, { 400.f, i * 200.f })));
    }

    mechanicList_.emplace_back(new Spread(416, 200, 0, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 0, TARGET_ONINIT)));
    mechanicList_.emplace_back(new Spread(416, 200, 0, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 1, TARGET_ONINIT)));
    mechanicList_.emplace_back(new Spread(416, 200, 0, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 2, TARGET_ONINIT)));
    mechanicList_.emplace_back(new Spread(416, 200, 0, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 3, TARGET_ONINIT)));

    for (int i = 0; i < 6; i++) {
        mechanicList_.emplace_back(new Spread(416, 200, 0, 4,
            Target(TARGET_POS, { i * 200.f, 600.f })));

        mechanicList_.emplace_back(new Spread(416, 200, 0, 4,
            Target(TARGET_POS, { 600.f, i * 200.f })));
    }

    mechanicList_.emplace_back(new Spread(420, 200, 0, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 0, TARGET_ONINIT)));
    mechanicList_.emplace_back(new Spread(420, 200, 0, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 1, TARGET_ONINIT)));

    mechanicList_.emplace_back(new Spread(420, 200, 0, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 2, TARGET_ONINIT)));
    mechanicList_.emplace_back(new Spread(420, 200, 0, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 3, TARGET_ONINIT)));

    for (int i = 0; i < 6; i++) {
        mechanicList_.emplace_back(new Spread(420, 200, 0, 4,
            Target(TARGET_POS, { i * 200.f, 600.f })));

        mechanicList_.emplace_back(new Spread(420, 200, 0, 4,
            Target(TARGET_POS, { 400.f, i * 200.f })));
    }

    mechanicList_.emplace_back(new Spread(424, 224, 0, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 0, TARGET_ONINIT)));
    mechanicList_.emplace_back(new Spread(424, 224, 0, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 1, TARGET_ONINIT)));
    mechanicList_.emplace_back(new Spread(424, 224, 0, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 2, TARGET_ONINIT)));
    mechanicList_.emplace_back(new Spread(424, 224, 0, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 3, TARGET_ONINIT)));

    for (int i = 0; i < 6; i++) {
        mechanicList_.emplace_back(new Spread(424, 200, 0, 4,
            Target(TARGET_POS, { i * 200.f, 400.f })));

        mechanicList_.emplace_back(new Spread(424, 200, 0, 4,
            Target(TARGET_POS, { 600.f, i * 200.f })));
    }

    mechanicList_.emplace_back(new Spread(428, 200, 0, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 0, TARGET_ONINIT)));
    mechanicList_.emplace_back(new Spread(428, 200, 0, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 1, TARGET_ONINIT)));
    mechanicList_.emplace_back(new Spread(428, 200, 0, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 2, TARGET_ONINIT)));
    mechanicList_.emplace_back(new Spread(428, 200, 0, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 3, TARGET_ONINIT)));

    for (int i = 0; i < 6; i++) {
        mechanicList_.emplace_back(new Spread(428, 200, 0, 4,
            Target(TARGET_POS, { i * 200.f, i * 200.f })));

        mechanicList_.emplace_back(new Spread(428, 200, 0, 4,
            Target(TARGET_POS, { (5.f - i) * 200.f, i * 200.f })));
    }

    mechanicList_.emplace_back(new Spread(432, 200, 0, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 0, TARGET_ONINIT)));
    mechanicList_.emplace_back(new Spread(432, 200, 0, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 1, TARGET_ONINIT)));
    mechanicList_.emplace_back(new Spread(432, 200, 0, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 2, TARGET_ONINIT)));
    mechanicList_.emplace_back(new Spread(432, 200, 0, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 3, TARGET_ONINIT)));

    for (int i = 0; i < 6; i++) {
        mechanicList_.emplace_back(new Spread(432, 200, 0, 4,
            Target(TARGET_POS, { i * 200.f, 500 })));

        mechanicList_.emplace_back(new Spread(432, 200, 0, 4,
            Target(TARGET_POS, { 500, i * 200.f })));
    }

    mechanicList_.emplace_back(new Spread(436, 200, 0, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 0, TARGET_ONINIT)));
    mechanicList_.emplace_back(new Spread(436, 200, 0, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 1, TARGET_ONINIT)));
    mechanicList_.emplace_back(new Spread(436, 200, 0, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 2, TARGET_ONINIT)));
    mechanicList_.emplace_back(new Spread(436, 200, 0, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 3, TARGET_ONINIT)));

    for (int i = 0; i < 6; i++) {
        mechanicList_.emplace_back(new Spread(436, 200, 0, 4,
            Target(TARGET_POS, { i * 200.f, i * 200.f })));

        mechanicList_.emplace_back(new Spread(436, 200, 0, 4,
            Target(TARGET_POS, { (5.f - i) * 200.f, i * 200.f })));
    }

    mechanicList_.emplace_back(new Spread(440, 200, 0, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 0, TARGET_ONINIT)));
    mechanicList_.emplace_back(new Spread(440, 200, 0, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 1, TARGET_ONINIT)));
    mechanicList_.emplace_back(new Spread(440, 200, 0, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 2, TARGET_ONINIT)));
    mechanicList_.emplace_back(new Spread(440, 200, 0, 4,
        Target(TARGET_ENTITY, TARGET_PLAYERS, 3, TARGET_ONINIT)));

    for (int ii = 0; ii < 6; ii++) {
        auto i = static_cast<float>(ii);
        mechanicList_.emplace_back(new Spread(440, 200, 0, 4,
            Target(TARGET_POS, { i * 200.f, 500 })));

        mechanicList_.emplace_back(new Spread(440, 200, 0, 4,
            Target(TARGET_POS, { 500, i * 200.f })));
    }

    mechanicList_.emplace_back(new ApplyDebuff(440, Target(TARGET_ENTITY, TARGET_PLAYERS, 1, TARGET_ONINIT), DEBUFF_ROOT, 4));

    for (int ii = 0; ii < 16; ii++) {
        auto i = static_cast<float>(ii);

        if (ii != 15) {
            mechanicList_.emplace_back(new ApplyDebuff(444 + 2 * i, Target(TARGET_ENTITY, TARGET_PLAYERS, ii % 2, TARGET_ONINIT), DEBUFF_ROOT, 2));
            mechanicList_.emplace_back(new ApplyDebuff(444 + 2 * i, Target(TARGET_ENTITY, TARGET_PLAYERS, ii % 2 + 2, TARGET_ONINIT), DEBUFF_ROOT, 2));
        }


        mechanicList_.emplace_back(new Spread(444 + 2 * i, 200, 2, 4,
            Target(TARGET_POS, { 500.f + 250.f * std::cos(2.f * i * PI / 4.f),
                                500.f + 250.f * std::sin(2.f * i * PI / 4.f) })));


    }

    mechanicList_.emplace_back(new Spread(476, 200, 4, 4,
        Target(TARGET_POS, { 500.f, 500.f })));